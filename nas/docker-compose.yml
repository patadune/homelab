services:
    traefik:
        image: traefik:v3.1.1
        container_name: traefik
        command:
            - "--log.level=DEBUG"
            - "--api.dashboard=true"
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
            - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
            - "--entrypoints.websecure.address=:443"
            - "--entrypoints.websecure.http.tls=true"
            - "--entrypoints.websecure.http.tls.certResolver=le"
            - "--entrypoints.websecure.http.tls.domains[0].main=${FQDN}"
            - "--entrypoints.websecure.http.tls.domains[0].sans=*.${FQDN}"
            - "--certificatesResolvers.le.acme.email=${EMAIL}"
            - "--certificatesResolvers.le.acme.storage=/etc/traefik/acme.json"
            - "--certificatesResolvers.le.acme.dnsChallenge.provider=infomaniak"
            - "--certificatesResolvers.le.acme.dnsChallenge.delayBeforeCheck=10"
        ports:
            - 80:80
            - 443:443
        expose:
            - 8080
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock
            - ${BASE_PATH}/traefik/:/etc/traefik/
        environment:
            - INFOMANIAK_ACCESS_TOKEN
            - FQDN
        labels:
            - traefik.enable=true
            - traefik.http.routers.traefik.entryPoints=websecure
            - traefik.http.routers.traefik.rule=Host(`traefik.${FQDN}`)
            - traefik.http.services.traefik.loadbalancer.server.port=8080
        restart: unless-stopped

    portainer:
        image: portainer/portainer-ce:2.20.3
        container_name: portainer
        expose:
            - 9000
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ${BASE_PATH}/portainer:/data
        labels:
            - traefik.enable=true
            - traefik.http.routers.portainer.entryPoints=websecure
            - traefik.http.routers.portainer.rule=Host(`portainer.${FQDN}`)
            - traefik.http.services.portainer.loadbalancer.server.port=9000
        restart: unless-stopped

    prowlarr:
        image: lscr.io/linuxserver/prowlarr:1.21.2
        container_name: prowlarr
        volumes:
            - ${BASE_PATH}/prowlarr:/config
        environment:
            - PUID
            - PGID
            - TZ
        labels:
            - traefik.enable=true
            - traefik.http.routers.prowlarr.entryPoints=websecure
            - traefik.http.routers.prowlarr.rule=Host(`prowlarr.${FQDN}`)
        expose:
            - 9696
        restart: unless-stopped

    sonarr:
        image: lscr.io/linuxserver/sonarr:4.0.8
        container_name: sonarr
        volumes:
            - ${BASE_PATH}/sonarr:/config
            - /volume1/Media:/media
        environment:
            - PUID
            - PGID
            - TZ
        labels:
            - traefik.enable=true
            - traefik.http.routers.sonarr.entryPoints=websecure
            - traefik.http.routers.sonarr.rule=Host(`sonarr.${FQDN}`)
        expose:
            - 8989
        restart: unless-stopped

    bazarr:
        image: lscr.io/linuxserver/bazarr:1.4.3
        container_name: bazarr
        volumes:
            - ${BASE_PATH}/bazarr:/config
            - /volume1/Media:/media
        environment:
            - PUID
            - PGID
            - TZ
        labels:
            - traefik.enable=true
            - traefik.http.routers.bazarr.entryPoints=websecure
            - traefik.http.routers.bazarr.rule=Host(`bazarr.${FQDN}`)
        expose:
            - 6767
        restart: unless-stopped

    radarr:
        image: lscr.io/linuxserver/radarr:5.9.1
        container_name: radarr
        volumes:
            - ${BASE_PATH}/radarr:/config
            - /volume1/Media:/media
        environment:
            - PUID
            - PGID
            - TZ
        labels:
            - traefik.enable=true
            - traefik.http.routers.radarr.entryPoints=websecure
            - traefik.http.routers.radarr.rule=Host(`radarr.${FQDN}`)
        expose:
            - 7878
        restart: unless-stopped

    recyclarr:
        container_name: recyclarr
        image: ghcr.io/recyclarr/recyclarr:7.2.1
        user: ${PUID}:${PGID}
        environment:
            - TZ
        volumes:
            - ${BASE_PATH}/recyclarr:/config
        restart: unless-stopped

    qbittorrent:
        container_name: qbittorrent
        image: lscr.io/linuxserver/qbittorrent:4.6.6
        environment:
            - PUID
            - PGID
            - TZ
            - DOCKER_MODS=ghcr.io/gabe565/linuxserver-mod-vuetorrent
        volumes:
            - ${BASE_PATH}/qbittorrent:/config
            - /volume1/Media/Downloads:/media/Downloads
        ports:
            - 6881:6881
            - 6881:6881/udp
        labels:
            - traefik.enable=true
            - traefik.http.routers.qbittorrent.entryPoints=websecure
            - traefik.http.routers.qbittorrent.rule=Host(`torrent.${FQDN}`)
            - traefik.http.services.qbittorrent.loadbalancer.server.port=8080
        expose:
            - 8080
        restart: unless-stopped

    tautulli:
        image: lscr.io/linuxserver/tautulli:2.14.4
        container_name: tautulli
        volumes:
            - ${BASE_PATH}/tautulli:/config
        environment:
            - PUID
            - PGID
            - TZ
        labels:
            - traefik.enable=true
            - traefik.http.routers.tautulli.entryPoints=websecure
            - traefik.http.routers.tautulli.rule=Host(`tautulli.${FQDN}`)
        expose:
            - 8181
        restart: unless-stopped

    calibre:
        image: linuxserver/calibre:7.17.0
        container_name: calibre
        restart: unless-stopped
        environment:
            - TZ # Specify a timezone to use e.g. Europe/London.
            - PUID # UID of user to take ownership of application/files
            - PGID # GID of user to take ownership of application/files
            - GUAC_USER # Username for the calibre desktop gui. (Optional)
            - GUAC_PASS # Password's md5 hash for the calibre desktop gui. (Optional)
        volumes:
            - ${BASE_PATH}/calibre:/config
            - /volume1/Media/Books:/media/Books
        labels:
            - traefik.enable=true
            - traefik.http.routers.calibre.entryPoints=websecure
            - traefik.http.routers.calibre.rule=Host(`calibre.${FQDN}`)
            - traefik.http.routers.calibre.service=calibre
            - traefik.http.services.calibre.loadbalancer.server.port=8080
            - traefik.http.routers.opds.entryPoints=websecure
            - traefik.http.routers.opds.rule=Host(`opds.${FQDN}`)
            - traefik.http.routers.opds.service=opds
            - traefik.http.services.opds.loadbalancer.server.port=8081

    home-assistant:
        image: homeassistant/home-assistant:2024.8
        container_name: home-assistant
        volumes:
            - ${BASE_PATH}/home-assistant:/config
        environment:
            - TZ
        network_mode: host
        expose:
            - 8123
        restart: unless-stopped

    redis:
        image: redis:7.2.4
        container_name: redis
        restart: unless-stopped
        volumes:
            - ${BASE_PATH}/redis:/data

    paperless:
        image: ghcr.io/paperless-ngx/paperless-ngx:2.11.4
        container_name: paperless
        depends_on:
            - redis
        volumes:
            - ${BASE_PATH}/paperless/data:/usr/src/paperless/data
            - ${BASE_PATH}/paperless/media:/usr/src/paperless/media
            - ${BASE_PATH}/paperless/export:/usr/src/paperless/export
            - ${BASE_PATH}/paperless/consume:/usr/src/paperless/consume
        environment:
            - PAPERLESS_REDIS
            - USERMAP_UID
            - USERMAP_GID
            - PAPERLESS_URL
            - PAPERLESS_TIME_ZONE
            - PAPERLESS_OCR_LANGUAGE
        labels:
            - traefik.enable=true
            - traefik.http.routers.paperless.entryPoints=websecure
            - traefik.http.routers.paperless.rule=Host(`paperless.${FQDN}`)
        expose:
            - 8000
        restart: unless-stopped

    actual_server:
        image: ghcr.io/actualbudget/actual-server:24.8.0
        container_name: actual
        volumes:
            - ${BASE_PATH}/actual:/data
        labels:
            - traefik.enable=true
            - traefik.http.routers.actual.entryPoints=websecure
            - traefik.http.routers.actual.rule=Host(`actual.${FQDN}`)
        expose:
            - 5006
        restart: unless-stopped

    adguard:
        image: adguard/adguardhome:v0.107.52
        container_name: adguard
        ports:
            - 53:53/udp
        volumes:
            - ${BASE_PATH}/adguard/work:/opt/adguardhome/work
            - ${BASE_PATH}/adguard/conf:/opt/adguardhome/conf
        labels:
            - traefik.enable=true
            - traefik.http.routers.adguard.entryPoints=websecure
            - traefik.http.routers.adguard.rule=Host(`adguard.${FQDN}`)
            - traefik.http.services.adguard.loadbalancer.server.port=3000
        restart: unless-stopped

networks:
    default:
        driver: bridge
