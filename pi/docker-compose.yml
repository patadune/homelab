services:
    traefik:
        image: traefik:v3.5
        container_name: traefik
        command:
            - "--log.level=INFO"
            - "--api.dashboard=true"
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
            - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
            - "--entrypoints.websecure.address=:443"
            - "--entrypoints.websecure.http.tls=true"
            - "--entrypoints.websecure.http.tls.certResolver=le"
            - "--entrypoints.websecure.http.tls.domains[0].main=${LAN_DOMAIN}"
            - "--entrypoints.websecure.http.tls.domains[0].sans=*.${LAN_DOMAIN}"
            - "--certificatesResolvers.le.acme.email=${EMAIL}"
            - "--certificatesResolvers.le.acme.storage=/etc/traefik/acme.json"
            - "--certificatesResolvers.le.acme.dnsChallenge.provider=infomaniak"
            - "--certificatesResolvers.le.acme.dnsChallenge.delayBeforeCheck=10"
        ports:
            - 80:80
            - 443:443
        expose:
            - 8080
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ${BASE_PATH}/traefik:/etc/traefik
        environment:
            - INFOMANIAK_ACCESS_TOKEN
            - LAN_DOMAIN
        labels:
            - traefik.enable=true
            - traefik.http.routers.traefik.entryPoints=websecure
            - traefik.http.routers.traefik.rule=Host(`traefik.${LAN_DOMAIN}`)
            - traefik.http.services.traefik.loadbalancer.server.port=8080
        restart: unless-stopped

    openwebrx:
        image: slechev/openwebrxplus:1.2.93
        container_name: openwebrx
        volumes:
            - ${BASE_PATH}/openwebrx/var:/var/lib/openwebrx
            - ${BASE_PATH}/openwebrx/etc:/etc/openwebrx
        environment:
            - TZ
            - HEALTHCHECK_USB_0BDA_2838=1
        devices:
            - /dev/bus/usb:/dev/bus/usb
        tmpfs:
            - /tmp/openwebrx
        labels:
            - traefik.enable=true
            - traefik.http.routers.openwebrx.entryPoints=websecure
            - traefik.http.routers.openwebrx.rule=Host(`sdr.${LAN_DOMAIN}`)
        expose:
            - 8073
        restart: unless-stopped

    adguard:
        image: adguard/adguardhome:v0.107.68
        container_name: adguard
        ports:
            - 53:53/udp
        volumes:
            - ${BASE_PATH}/adguard/work:/opt/adguardhome/work
            - ${BASE_PATH}/adguard/conf:/opt/adguardhome/conf
        labels:
            - traefik.enable=true
            - traefik.http.routers.adguard.entryPoints=websecure
            - traefik.http.routers.adguard.rule=Host(`adguard.${LAN_DOMAIN}`)
            - traefik.http.services.adguard.loadbalancer.server.port=3000
        restart: unless-stopped

    uptime-kuma:
        image: louislam/uptime-kuma:1.23.17
        container_name: uptime-kuma
        volumes:
            - ${BASE_PATH}/uptime-kuma:/app/data
        labels:
            - traefik.enable=true
            - traefik.http.routers.uptime-kuma.entryPoints=websecure
            - traefik.http.routers.uptime-kuma.rule=Host(`uptime.${LAN_DOMAIN}`)
        expose:
            - 3001
        restart: unless-stopped

networks:
    default:
        driver: bridge
