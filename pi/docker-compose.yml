services:
    traefik:
        image: traefik:v3.2.0
        container_name: traefik
        command:
            - "--log.level=INFO"
            - "--api.dashboard=true"
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
            - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
            - "--entrypoints.websecure.address=:443"
            - "--entrypoints.websecure.http.tls=true"
            - "--entrypoints.websecure.http.tls.certResolver=le"
            - "--entrypoints.websecure.http.tls.domains[0].main=${FQDN}"
            - "--entrypoints.websecure.http.tls.domains[0].sans=*.${FQDN}"
            - "--certificatesResolvers.le.acme.email=${EMAIL}"
            - "--certificatesResolvers.le.acme.storage=/etc/traefik/acme.json"
            - "--certificatesResolvers.le.acme.dnsChallenge.provider=infomaniak"
            - "--certificatesResolvers.le.acme.dnsChallenge.delayBeforeCheck=10"
        ports:
            - 80:80
            - 443:443
        expose:
            - 8080
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ${BASE_PATH}/traefik:/etc/traefik
        environment:
            - INFOMANIAK_ACCESS_TOKEN
            - FQDN
        labels:
            - traefik.enable=true
            - traefik.http.routers.traefik.entryPoints=websecure
            - traefik.http.routers.traefik.rule=Host(`traefik.${FQDN}`)
            - traefik.http.services.traefik.loadbalancer.server.port=8080
        restart: unless-stopped

    portainer:
        image: portainer/portainer-ce:2.24.0-alpine
        container_name: portainer
        environment:
            - TZ
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ${BASE_PATH}/portainer:/data
        labels:
            - traefik.enable=true
            - traefik.http.routers.portainer.entryPoints=websecure
            - traefik.http.routers.portainer.rule=Host(`portainer.${FQDN}`)
            - traefik.http.services.portainer.loadbalancer.server.port=9000
        restart: unless-stopped

    tvheadend:
        image: lscr.io/linuxserver/tvheadend:latest
        container_name: tvheadend
        environment:
            - PUID
            - PGID
            - TZ
        volumes:
            - ${BASE_PATH}/tvheadend:/config
            - recordings:/recordings
        ports:
            - 9982:9982
        devices:
            - /dev/dvb:/dev/dvb
        labels:
            - traefik.enable=true
            - traefik.http.routers.tv.entryPoints=websecure
            - traefik.http.routers.tv.rule=Host(`tv.${FQDN}`)
            - traefik.http.services.tv.loadbalancer.server.port=9981
        restart: unless-stopped

    adguard:
        image: adguard/adguardhome:v0.107.54
        container_name: adguard
        ports:
            - 53:53/udp
        volumes:
            - ${BASE_PATH}/adguard/work:/opt/adguardhome/work
            - ${BASE_PATH}/adguard/conf:/opt/adguardhome/conf
        labels:
            - traefik.enable=true
            - traefik.http.routers.adguard.entryPoints=websecure
            - traefik.http.routers.adguard.rule=Host(`adguard.${FQDN}`)
            - traefik.http.services.adguard.loadbalancer.server.port=3000
        restart: unless-stopped

    uptime-kuma:
        image: louislam/uptime-kuma:1.23.15
        container_name: uptime-kuma
        volumes:
            - ${BASE_PATH}/uptime-kuma:/app/data
        labels:
            - traefik.enable=true
            - traefik.http.routers.uptime-kuma.entryPoints=websecure
            - traefik.http.routers.uptime-kuma.rule=Host(`uptime.${FQDN}`)
        expose:
            - 3001
        restart: unless-stopped

networks:
    default:
        driver: bridge

volumes:
  recordings:
    driver_opts:
      type: cifs
      o: "ip=${SAMBA_IP},username=${SAMBA_USER},password=${SAMBA_PASSWORD},uid=${PUID},gid=${PGID},vers=3.0"
      device: "//${SAMBA_IP}/Recordings"
